#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ YTsaurus
–û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –±–ª–æ–∫–µ –∏–∑ Jupyter –Ω–æ—É—Ç–±—É–∫–∞ upload_massages.ipynb
"""

import asyncio
import os
import pathlib
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –º–æ–¥—É–ª—è
env_path = pathlib.Path(__file__).parent / '.env'
load_dotenv(env_path)

from . import tg_etl
from . import test_data

def init_test_data(days_back_start: int = 3, days_back_end: int = 0):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ YT
    
    Parameters
    ----------
    days_back_start : int, default 3
        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    days_back_end : int, default 0
        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –¥–ª—è –∫–æ–Ω—Ü–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ (0 = —Å–µ–π—á–∞—Å)
    """
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏ –∫ —Ç–∞–±–ª–∏—Ü–∞–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    users_table = os.getenv("YT_USERS_TABLE", "//tmp/ia-nartov/hackathon/tg_users")
    chats_table = os.getenv("YT_CHATS_TABLE", "//tmp/ia-nartov/hackathon/tg_chats")
    messages_table = os.getenv("YT_MESSAGES_TABLE", "//tmp/ia-nartov/hackathon/tg_raw_enriched")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    df_users = test_data.get_test_users()
    df_chats = test_data.get_test_chats()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ YT
    print(f"–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ {users_table}...")
    tg_etl.upload_df_to_yt(
        df_users,
        users_table,
        test_data.USER_SCHEMA,
        overwrite=True
    )
    
    print(f"–ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç—ã –≤ {chats_table}...")
    tg_etl.upload_df_to_yt(
        df_chats,
        chats_table,
        test_data.CHAT_SCHEMA,
        overwrite=True
    )
    
    # –í—ã–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram —á–∞—Ç–æ–≤
    print(f"\nüîÑ –í—ã–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram –∑–∞ –ø–µ—Ä–∏–æ–¥:")
    print(f"   –ù–∞—á–∞–ª–æ: {days_back_start} –¥–Ω–µ–π –Ω–∞–∑–∞–¥")
    print(f"   –ö–æ–Ω–µ—Ü: {days_back_end} –¥–Ω–µ–π –Ω–∞–∑–∞–¥")
    print(f"–ß–∞—Ç—ã –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏: {len(test_data.TG_CHATS)}")
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio –¥–ª—è –≤—ã–∑–æ–≤–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ dump_chats
        df_messages = asyncio.run(tg_etl.dump_chats(
            test_data.TG_CHATS,
            days_back_start=days_back_start,
            days_back_end=days_back_end
        ))
        
        print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(df_messages)}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ YT
        print(f"–ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {messages_table}...")
        tg_etl.upload_df_to_yt(
            df_messages,
            messages_table,
            test_data.MSG_SCHEMA,
            overwrite=True
        )
        
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram –≤—ã–≥—Ä—É–∂–µ–Ω—ã –∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ YT!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã TG_API_ID –∏ TG_API_HASH –≤ .env")
        print("- –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —É–∫–∞–∑–∞–Ω–Ω—ã–º —á–∞—Ç–∞–º")
        print("- –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –≤ Telegram")
    
    print("\n‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(df_users)}")
    print(f"–ß–∞—Ç–æ–≤: {len(df_chats)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ID —á–∞—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    print("\nID —á–∞—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    for _, chat in df_chats.iterrows():
        print(f"  {chat['chat_id']} - {chat['chat']}")

if __name__ == "__main__":
    init_test_data()